"""
Dashboard principal da aplica√ß√£o
"""
import streamlit as st
from datetime import datetime

def show_dashboard(services):
    """Exibe o dashboard principal"""
    st.header("üìä Dashboard")
    
    try:
        db_manager = services['db_manager']
        
        # Estat√≠sticas gerais
        col1, col2, col3, col4 = st.columns(4)
        
        with col1:
            total_figuras = len(db_manager.get_all_figuras_tributarias())
            st.metric("Figuras Tribut√°rias", total_figuras)
        
        with col2:
            # Placeholder para estat√≠sticas de c√°lculos
            st.metric("C√°lculos Realizados", "0")
        
        with col3:
            # Placeholder para total ICMS ST
            st.metric("Total ICMS ST", "R$ 0,00")
        
        with col4:
            # Placeholder para economia
            st.metric("Economia Gerada", "R$ 0,00")
        
        st.divider()
        
        # Informa√ß√µes do sistema
        st.subheader("‚ÑπÔ∏è Informa√ß√µes do Sistema")
        
        info_col1, info_col2 = st.columns(2)
        
        with info_col1:
            st.info("""
            **Funcionalidades Dispon√≠veis:**
            - ‚úÖ Cadastro de Figuras Tribut√°rias
            - ‚úÖ C√°lculo ICMS ST Manual
            - ‚úÖ Importa√ß√£o de XML NFe
            - ‚úÖ Rateio de Frete por Fora
            - ‚úÖ Exporta√ß√£o para Excel
            """)
        
        with info_col2:
            st.success("""
            **F√≥rmulas Implementadas:**
            - üßÆ D√©bito ST: (Valor + IPI + Frete) √ó (1 + MVA) √ó (1 - Red.) √ó 18%
            - üí∞ Cr√©dito ICMS: Valor √ó (1 - Red.) √ó Al√≠quota
            - üìà ICMS ST a Recolher: D√©bito - Cr√©dito
            - üíµ Custo Final: (Valor + ICMS ST + IPI + Frete) √∑ Qtd
            """)
        
    except Exception as e:
        st.error(f"Erro ao carregar dashboard: {e}")